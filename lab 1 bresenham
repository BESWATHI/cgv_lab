#include<iostream>
#include<stdio.h>
#include<glut.h>

void setPixel(int x, int y)
{
	glBegin(GL_POINTS);
	glVertex2i(x, y);
	glEnd();
	glFlush();

}

void bresenhamline(int xx,int yy,int xend,int yend)
{
	int p, x, y;
	if (xx > xend)
	{
		x = xend;
		y = yend;
		xend = xx;
		yend = yy;
	}
	else
	{
		x = xx;
		y = yy;
	}
	int dx = abs(xend - x), dy = abs(yend - y);
	int twodx = 2 * dx, twodxMinustwody = 2 * (dx - dy);
	int twody = 2 * dy, twodyMinustwodx = 2 * (dy - dx);

	glColor3f(0, 0, 1);
	glPointSize(5);

	if (dx > dy)
	{
		p = 2 * dy - dx;
		setPixel(x, y);
		while (x < xend)
		{
			x = x + 1;
			if (p < 0)
				p = p + twody;
			else 
			{
				y = y + 1;
				p = p + twodyMinustwodx;
			}
			setPixel(x, y);
		}
	}
	else
	{
		p = 2 * dx - dy;
		setPixel(x, y);
		while (y < yend)
		{
			y = y + 1;
			if (p < 0)
				p = p + twodx;
			else
			{
				x = x + 1;
				p = p + twodxMinustwody;
			}
			setPixel(x, y);
		}
	}

}
void myinit()
{
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0, 500, 0, 500);
	glMatrixMode(GL_MODELVIEW);
}
void disp1()
{
	glClearColor(1, 1, 1, 1);
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1, 0, 0);
	glPointSize(5);
	bresenhamline(100, 200, 300, 400);
}
int main()
{
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(500, 500);
	glutInitWindowPosition(300, 150);
	glutCreateWindow("Lines");
	myinit();
	glutDisplayFunc(disp1);
	glutMainLoop();
	return 0;
}
